#include <DynamixelSerial.h>

int id1 = 11;
int id2 = 6;
int id3 = 16;
int command = 0;

void setup(){
    Dynamixel.setSerial(&Serial);
    Dynamixel.begin(1000000,10);
    delay(1000);
}

void loop(){
    //Dynamixel.moveSpeed(id2,random(200,800),random(200,800));
    if(Serial.available() > 0) {
        command = Serial.read();
    }
    Dynamixel.turn(id2, RIGTH, 1000);
    Dynamixel.turn(id2, LEFT, 1000);
    if (command == '0') {
        Dynamixel.turn(id2, RIGTH, 1000);
        command = '1';
        delay(2000);
        }
    if (command == '1') {
        Dynamixel.turn(id2, LEFT, 1000);
        command = '0';
        delay(2000);
    }
    if(command != '0' && command != '1') {
        Dynamixel.move(id2,450 + random(0,100));
    }
}





#include <DynamixelSerial.h>

int id1 = 11;
int id2 = 6;
int id3 = 16;
int command = 0;

void setup(){
    Dynamixel.setSerial(&Serial);
    Dynamixel.begin(1000000,10);
    delay(1000);
}

void loop(){
    //Dynamixel.moveSpeed(id2,random(200,800),random(200,800));
    if(Serial.available() > 0) {
        command = Serial.read() - '0';
    }
    Dynamixel.turn(id2, RIGTH, 1000);
    Dynamixel.turn(id2, LEFT, 1000);
    if (command == 0) {
        Dynamixel.turn(id2, RIGTH, 1000);
        command = 1;
        delay(2000);
        }
    if (command == 1) {
        Dynamixel.turn(id2, LEFT, 1000);
        command = 0;
        delay(2000);
    }
    if(command != 0 && command != 1) {
        Dynamixel.move(id2,500 + random(50,150));
    }
}




#include <DynamixelSerial.h>

int id1 = 11;
int id2 = 6;
int id3 = 16;
int command = 0;

void setup(){
    Dynamixel.setSerial(&Serial);
    Dynamixel.begin(1000000,10);
    delay(1000);
}

void loop(){
    //Dynamixel.moveSpeed(id2,random(200,800),random(200,800));
    /*if(Serial.available() > 0) {
        command = Serial.read();
    }*/
    Dynamixel.turn(id2, RIGTH, 1000);
    Dynamixel.turn(id2, LEFT, 1000);
    if (command == 0) {
        Dynamixel.turn(id2, RIGTH, 1000);
        command = 1;
        delay(2000);
        }
    if (command == 1) {
        Dynamixel.turn(id2, LEFT, 1000);
        command = 0;
        delay(2000);
    }
    if(command != 0 && command != 1) {
        Dynamixel.move(id2,500 + random(50,150));
    }
}





#include <DynamixelSerial.h>

int id1 = 11;
int id2 = 6;
int id3 = 16;
int command = 0;

void setup(){
    Dynamixel.setSerial(&Serial);
    Dynamixel.begin(1000000,10);
    delay(1000);
}

void loop(){
    Dynamixel.moveSpeed(id1,random(200,800),random(200,800));
    if(Serial.available() > 0) {
        command = Serial.read();
    }
    if (command == 0) {
        Dynamixel.turn(id2, RIGTH, 1000);
        delay(2000);
        }
    if (command == 1) {
        Dynamixel.turn(id2, LEFT, 1000);
        delay(2000);
    }
    if(command != 0 && command != 1) {
        Dynamixel.move(id2,500 + ramdom(50,150));
    }
}





#include <DynamixelSerial.h>

int id1 = 11;
int id2 = 6;
int id3 = 16;
int command = 0;

void setup(){
    Dynamixel.setSerial(&Serial);
    Dynamixel.begin(1000000,10);
    delay(1000);
}

void loop(){
    Dynamixel.move(id1,random(200,800));  // 200 to 800
    delay(1000);
    Dynamixel.moveSpeed(id1,random(200,800),random(200,800));
    delay(2000);
    Dynamixel.setEndless(id1,ON);
    if(Serial.available() > 0) {
        command = 0;
        if (command == 0) {
            Dynamixel.turn(id1, RIGTH, 1000);
            command = 1;
            delay(2000);

        }
        if (command == 1) {
            Dynamixel.turn(id1, LEFT, 1000);
            command = 0;
            delay(2000);
        }
    }
}






#include <DynamixelSerial.h>

int id1 = 11;
int id2 = 6;
int id3 = 16;
int command = 0;

void setup(){
    Dynamixel.setSerial(&Serial);
    Dynamixel.begin(1000000,10);
    delay(1000);
}

void loop(){
    Dynamixel.move(id1,random(200,800));  // 200 to 800
    delay(1000);
    Dynamixel.moveSpeed(id1,random(200,800),random(200,800));
    delay(2000);
    Dynamixel.setEndless(id1,ON);

        command = 0;
        if(command == 0)
        {
            Dynamixel.turn(id1,RIGTH,1000);
            command = 1;
            delay(2000);

        }
        if(command == 1)
        {
            Dynamixel.turn(id1,LEFT,1000);
            command = 0;
            delay(2000);
        }





}






#include <DynamixelSerial.h>

int id1 = 11;
int id2 = 6;
int id3 = 16;
int command = 0;

void setup(){
    Dynamixel.setSerial(&Serial);
    Dynamixel.begin(1000000,10);
    delay(1000);
}

void loop(){
    Dynamixel.move(id1,random(200,800));  // 200 to 800
    delay(1000);
    Dynamixel.moveSpeed(id1,random(200,800),random(200,800));
    delay(2000);
    Dynamixel.setEndless(id1,ON);
    
        command = Serial.read() - '0';
        if(command == 0)
        {
            Dynamixel.turn(id1,RIGTH,1000);
            delay(2000);
        }
        if(command == 1)
        {
            Dynamixel.turn(id1,LEFT,1000);
            delay(2000);
        }

    



}








#include <DynamixelSerial.h>

int id1 = 11;
int id2 = 6;
int id3 = 16;
int command = 0;

void setup(){
    Dynamixel.setSerial(&Serial);
    Dynamixel.begin(1000000,10);
    delay(1000);
}

void loop(){
    Dynamixel.move(id1,random(200,800));  // 200 to 800
    delay(1000);
    Dynamixel.moveSpeed(id1,random(200,800),random(200,800));
    delay(2000);
    Dynamixel.setEndless(id1,ON);
    if(Serial.available() > 0)
    {
        command = Serial.read() - '0';
        if(command == 0)
        {
            Dynamixel.turn(id1,RIGTH,1000);
            delay(2000);
        }
        if(command == 1)
        {
            Dynamixel.turn(id1,LEFT,1000);
            delay(2000);
        }

    }



}









#include <AX12A.h>

#define DirectionPin   (10u)
#define JOINT_1 (9u)
#define JOINT_2 (11u)
#define JOINT_3 (6u)
#define BaudRate (1000000ul)

void setup() {
    Serial.begin(BaudRate);
    ax12a.begin(BaudRate, DirectionPin, &Serial);
}
int command = 0;
void loop() {
    // Așteaptă un byte de la serial
    if (Serial.available() > 0) {
        command = Serial.read() - '0';
        Serial.println(command); // trimitem un mesaj de confirmare catre Python
        // Verifică ce comandă a fost primită
        switch (command) {
            case 1:
                // Mișcă primul motor la poziția 512
                ax12a.moveSpeed(JOINT_1, 512, 500);
                delay(1000)
                break;
            case 2:
                // Mișcă al doilea motor la poziția 512
                ax12a.moveSpeed(JOINT_2, 512, 500);
                delay(1000)
                break;
            case 3:
                // Mișcă al treilea motor la poziția 512
                ax12a.moveSpeed(JOINT_3, 512, 500);
                delay(1000)
                break;
            default:
                // Comanda primită nu este validă
                break;
        }
    }
}





cod ardu pt led


int ledPin = 13;  // setam LED-ul intern de pe placa Arduino
int incomingByte = 0;   // variabila in care vom salva datele primite de la Python

void setup() {
  pinMode(ledPin, OUTPUT);  // setam pinul LED ca fiind output
  Serial.begin(9600);  // pornim comunicarea seriala la 9600 baud
}

void loop() {
  if (Serial.available() > 0) { // daca exista date disponibile la serial
    incomingByte = Serial.read(); // citim datele primite
    if (incomingByte == '1') { // verificam daca datele primite sunt '1'
      digitalWrite(ledPin, HIGH); // aprindem LED-ul
      Serial.println("LED aprins"); // trimitem un mesaj de confirmare catre Python
    }
    else if (incomingByte == '0') { // verificam daca datele primite sunt '0'
      digitalWrite(ledPin, LOW); // stingem LED-ul
      Serial.println("LED stins"); // trimitem un mesaj de confirmare catre Python
    }
  }
}